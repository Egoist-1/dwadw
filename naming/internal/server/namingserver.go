// Code generated by goctl. DO NOT EDIT.
// goctl 1.8.2
// Source: naming.proto

package server

import (
	"context"

	"naming/internal/logic"
	"naming/internal/svc"
	"naming/pb/naming"
)

type NamingServer struct {
	svcCtx *svc.ServiceContext
	naming.UnimplementedNamingServer
}

func NewNamingServer(svcCtx *svc.ServiceContext) *NamingServer {
	return &NamingServer{
		svcCtx: svcCtx,
	}
}

func (s *NamingServer) Load(ctx context.Context, in *naming.LoadReq) (*naming.LoadRes, error) {
	l := logic.NewLoadLogic(ctx, s.svcCtx)
	return l.Load(in)
}

func (s *NamingServer) AddHost(ctx context.Context, in *naming.AddHostReq) (*naming.AddHostRes, error) {
	l := logic.NewAddHostLogic(ctx, s.svcCtx)
	return l.AddHost(in)
}

func (s *NamingServer) GetAllInfo(ctx context.Context, in *naming.GetAllInfoReq) (*naming.GetAllInfoReqRes, error) {
	l := logic.NewGetAllInfoLogic(ctx, s.svcCtx)
	return l.GetAllInfo(in)
}
func (s *NamingServer) UpdateHost(ctx context.Context,in *naming.UpdateHostReq) (*naming.UpdateHostRes, error) {
	log := logic.NewUpdateHostLogic(ctx,s.svcCtx)
	return log.UpdateHost(in)
}
