// Code generated by goctl. DO NOT EDIT.
// goctl 1.8.2
// Source: naming.proto

package naming

import (
	"context"

	"naming/naming/pb/naming"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	AddHostReq       = naming.AddHostReq
	AddHostRes       = naming.AddHostRes
	GetAllInfoReq    = naming.GetAllInfoReq
	GetAllInfoReqRes = naming.GetAllInfoReqRes
	LoadReq          = naming.LoadReq
	LoadRes          = naming.LoadRes
	UpdateHostReq    = naming.UpdateHostReq
	UpdateHostRes    = naming.UpdateHostRes

	Naming interface {
		Load(ctx context.Context, in *LoadReq, opts ...grpc.CallOption) (*LoadRes, error)
		AddHost(ctx context.Context, in *AddHostReq, opts ...grpc.CallOption) (*AddHostRes, error)
		GetAllInfo(ctx context.Context, in *GetAllInfoReq, opts ...grpc.CallOption) (*GetAllInfoReqRes, error)
		UpdateHost(ctx context.Context, in *UpdateHostReq, opts ...grpc.CallOption) (*UpdateHostRes, error)
	}

	defaultNaming struct {
		cli zrpc.Client
	}
)

func NewNaming(cli zrpc.Client) Naming {
	return &defaultNaming{
		cli: cli,
	}
}

func (m *defaultNaming) Load(ctx context.Context, in *LoadReq, opts ...grpc.CallOption) (*LoadRes, error) {
	client := naming.NewNamingClient(m.cli.Conn())
	return client.Load(ctx, in, opts...)
}

func (m *defaultNaming) AddHost(ctx context.Context, in *AddHostReq, opts ...grpc.CallOption) (*AddHostRes, error) {
	client := naming.NewNamingClient(m.cli.Conn())
	return client.AddHost(ctx, in, opts...)
}

func (m *defaultNaming) GetAllInfo(ctx context.Context, in *GetAllInfoReq, opts ...grpc.CallOption) (*GetAllInfoReqRes, error) {
	client := naming.NewNamingClient(m.cli.Conn())
	return client.GetAllInfo(ctx, in, opts...)
}

func (m *defaultNaming) UpdateHost(ctx context.Context, in *UpdateHostReq, opts ...grpc.CallOption) (*UpdateHostRes, error) {
	client := naming.NewNamingClient(m.cli.Conn())
	return client.UpdateHost(ctx, in, opts...)
}
