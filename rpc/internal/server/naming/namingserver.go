// Code generated by goctl. DO NOT EDIT.
// goctl 1.8.1
// Source: naming.proto

package server

import (
	"context"

	"naming/rpc/internal/logic/naming"
	"naming/rpc/internal/svc"
	"naming/rpc/naming"
)

type NamingServer struct {
	svcCtx *svc.ServiceContext
	naming.UnimplementedNamingServer
}

func NewNamingServer(svcCtx *svc.ServiceContext) *NamingServer {
	return &NamingServer{
		svcCtx: svcCtx,
	}
}

// 查询示例列表
func (s *NamingServer) GetNamingList(ctx context.Context, in *naming.NamingReq) (*naming.NamingListRes, error) {
	l := naminglogic.NewGetNamingListLogic(ctx, s.svcCtx)
	return l.GetNamingList(in)
}

// 查询示例详情
func (s *NamingServer) GetNamingInfo(ctx context.Context, in *naming.IdReq) (*naming.NamingInfoRes, error) {
	l := naminglogic.NewGetNamingInfoLogic(ctx, s.svcCtx)
	return l.GetNamingInfo(in)
}

// 新增示例
func (s *NamingServer) AddNaming(ctx context.Context, in *naming.NamingInfoRes) (*naming.StringRes, error) {
	l := naminglogic.NewAddNamingLogic(ctx, s.svcCtx)
	return l.AddNaming(in)
}

// 删除示例
func (s *NamingServer) DelNaming(ctx context.Context, in *naming.IdReq) (*naming.StringRes, error) {
	l := naminglogic.NewDelNamingLogic(ctx, s.svcCtx)
	return l.DelNaming(in)
}

// 批量删除示例
func (s *NamingServer) BatchDelNaming(ctx context.Context, in *naming.IdListReq) (*naming.StringRes, error) {
	l := naminglogic.NewBatchDelNamingLogic(ctx, s.svcCtx)
	return l.BatchDelNaming(in)
}

// 修改示例
func (s *NamingServer) UpdateNaming(ctx context.Context, in *naming.NamingInfoRes) (*naming.StringRes, error) {
	l := naminglogic.NewUpdateNamingLogic(ctx, s.svcCtx)
	return l.UpdateNaming(in)
}
